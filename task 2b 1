import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 10, 100)  # 100 evenly spaced values from 0 to 10
y1 = np.sin(x)
y2 = np.cos(x)

fig, axs = plt.subplots(2, 1, figsize=(10, 8))  # 2 rows, 1 column

axs[0].plot(x, y1, label='sin(x)', color='b')
axs[1].plot(x, y2, label='cos(x)', color='r')

axs[0].set_title('Sine Function')
axs[0].set_xlabel('X-axis')
axs[0].set_ylabel('Y-axis')
axs[0].set_xticks(np.arange(0, 11, 2))  # Set custom x-ticks
axs[0].set_xticklabels(['0', '2', '4', '6', '8', '10'])  # Custom x-tick labels
axs[0].set_yticks(np.arange(-1, 1.5, 0.5))  # Set custom y-ticks

axs[1].set_title('Cosine Function')
axs[1].set_xlabel('X-axis')
axs[1].set_ylabel('Y-axis')
axs[1].set_xticks(np.arange(0, 11, 2))  # Set custom x-ticks
axs[1].set_xticklabels(['0', '2', '4', '6', '8', '10'])  # Custom x-tick labels
axs[1].set_yticks(np.arange(-1, 1.5, 0.5))  # Set custom y-ticks

axs[0].annotate('Local Max', xy=(1.57, 1), xytext=(3, 0.5),
                arrowprops=dict(facecolor='black', shrink=0.05))
axs[1].annotate('Local Min', xy=(4.71, -1), xytext=(6, -0.5),
                arrowprops=dict(facecolor='black', shrink=0.05))

axs[0].legend()
axs[1].legend()

plt.tight_layout()  # Adjust layout to prevent overlap
plt.savefig('line_plot.png')  # Save the plot as a PNG file

plt.show()
